[tox]
minversion = 2.5
envlist = py27,pep8,mypy
skipsdist = True

[testenv]
usedevelop = True
# DecprecationWarning is quite common in the stdlibs today as tox runs
# Disable it globally and and enable it locally, for now
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         PYTHONWARNINGS=default::DeprecationWarning:klippy,default::DeprecationWarning:tests,ignore::DeprecationWarning
passenv = TRACE_FAILONLY
          PYTHONPATH
install_command = pip install {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       stestr>=2.6.0,<3
whitelist_externals=
    echo
    true
commands =
    echo "Entering directory `{toxinidir}'"
    stestr run {posargs}

[testenv:cover]
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source klippy --parallel-mode
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       coverage
       stestr>=2.6.0,<3
commands =
  echo "Entering directory {toxinidir}"
  true > .coverage
  stestr run {posargs}
  coverage combine
  coverage report -m


[testenv:pep8]
deps =
    {[testenv]deps}
    pycodestyle
commands =
    echo "Entering directory `{toxinidir}'"
    pycodestyle

[testenv:mypy]
basepython = python3
deps =
    {[testenv]deps}
    mypy
setenv =
    {[testenv]setenv}
    MYPYPATH={toxinidir}
commands =
    echo "Entering directory `{toxinidir}'"
    mypy --config-file {toxinidir}/mypy.cfg -p klippy -p tests

[testenv:venv]
commands =
    echo "Entering directory `{toxinidir}'"
    {posargs}

[testenv:docs]
basepython = python3
description = invoke sphinx-build to build the HTML docs
deps = sphinx >= 3.0.0, < 4
       sphinx-autodoc-typehints >= 1.10.3, < 2
       sphinx-click >= 2.3.2, < 3
commands = sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[pycodestyle]
# E123, E125 skipped as they are invalid PEP-8.

# W503 is old and contradicts W504, but W503 is more consistently
# followed here; we disable both - they relate to where you put
# linebreaks in multiline expressions.w

# This project does not care for the following PEP-8 guidelines - they
# may be enabled in the future but they're not required now
# E401 multiple imports on one line
# E301/E302/E303/E305/E306 - blank line requirements
# E129 confusing indentation
# E201,E202,E203,E221,E222,E225,E226,E227,W231,E241,E251 whitespace around operators and such
# (E241 is actually a run-on line thing and should probably be fixed up)
# (E203 is just untidy commas and easy to fix)
# (E251 is a = b (vs a=b) for kwargs and easily fixed up)
# E261 two spaces before inline comment (quick to fix but an annoying requirement)
# E501 line length <80 characters (a quick one to fix)
# E265 space after '#' in block comments
# E721 comparing types vs isinstance() (a quick one to fix)
# E722 'except' should include an exception type
# E731 use 'def' not ' = lambda (a quick one to fix)
# E741 avoid l/I/O as variable names (a quick one to fix)
# W605 an invalid re escape sequence (a bug that wants fixing)
# E121,E122,E126,E127,E128,E131,E271 consistent indent in expressions (a fairly quick one to fix, worth fixing)
# E111,E117 indents consistentlya multiple of four (a quick one to fix, worth fixing)
# E703 semicolons at end of statement (a quick one to fix, worth fixing)
# E711 comparison to None / is None (a quick one to fix, worth fixing)
show-source = True

ignore = E123,E125,E401,E301,E302,E303,E305,E306,E129,E201,E202,E203,E221,E222,E225,E226,E227,E231,E241,E251,E261,E501,E265,E701,E721,E722,E731,E741,W605,W503,W504,E121,E122,E126,E127,E128,E131,E111,E117,E271,E703,E711
# builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,.tmp
