# Klipper `make menuconfig`, choose
# Micro-controller Arch (SAM3/SAM4/SAM E70 (Due and Duet))
# Processor model (SAM3x8e (Arduino Due))
# Communication interface (USB)
# Better connect to Programing port to flash firmware
# If encounter error during flash, try to run:
# stty -f /dev/ttyACM0 1200 && ../lib/bossac/bin/bossac --port=/dev/ttyACM0 --force_usb_port=true -e -w -v -b /path/to/my/firmware.bin -R
# manually to flash

[mcu]
# serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__Arduino_Due_Prog._Port_95632313334351118062-if00
serial: /dev/ttyACM0

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000
max_z_velocity: 20
max_z_accel: 200

[stepper_x]
step_pin: PB18
dir_pin: PB17
enable_pin: PC15
rotation_distance: 40
microsteps: 64
endstop_pin: ^!PB26 # X_MIN pin
#endstop_pin: ^PD9 # X_MAX pin
position_endstop: 0
position_max: 215
homing_speed: 50

[stepper_y]
step_pin: PB20
dir_pin: !PB19
enable_pin: PC17
rotation_distance: 40
microsteps: 64
# endstop_pin: ^PA15 # Y_MIN pin
endstop_pin: ^!PC6 # Y_MAX pin
position_endstop: 215
position_max: 215
homing_speed: 50

[stepper_z]
step_pin: PB16
dir_pin: PB15
enable_pin: PC19
rotation_distance: 8
microsteps: 32
#endstop_pin: ^PD1 # Z_MIN pin
endstop_pin: ^!PC2 # Z_MAX pin
position_endstop: 175
position_min: -3
position_max: 180
homing_speed: 16

[extruder]
step_pin: PC4
dir_pin: PD3
enable_pin: PA19
rotation_distance: 3.823
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
#pressure_advance: 0.5
#pressure_advance_lookahead_time: 0.010
heater_pin: PC21
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA24
control: pid
pid_Kp: 29.837
pid_Ki: 1.842
pid_Kd: 120.838
min_temp: -120
max_temp: 300
min_extrude_temp: 160

[heater_bed]
heater_pin: PC22
sensor_pin: PA16
sensor_type: EPCOS 100K B57560G104F
min_temp: -120
max_temp: 200
control: pid
pid_Kp: 72.356
pid_Ki: 2.254
pid_Kd: 580.658

[bltouch]
sensor_pin: ^PD1 #z_min_endstop
control_pin: PC23 #servo1
x_offset: -35
y_offset: 27
z_offset: 0
speed: 8
#lift_speed:
samples: 1
#sample_retract_dist:
#samples_result:
#samples_tolerance:
#samples_tolerance_retries:

[bed_mesh]
speed: 100 # causion! Limit z speed by setting max_z_velocty: in [printer]
mesh_min: 5, 30
mesh_max: 175, 210
probe_count: 3, 3

[fan]
pin: PD7 #D11 fan
kick_start_time: 0.200

[heater_fan extruder_cooler_fan]
pin: PA28 #D10
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[controller_fan controller_auto_fan]
pin: !PC29 #GPIO pin is all reversed
#max_power: 0.6

[fan_generic heatbed_cooler_fan]
pin: PB25

[led case_light]
#red_pin:
#green_pin:
#blue_pin:
white_pin: PC24 # better move to D12 or D2 for hw pwm
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
#cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
initial_WHITE: 1.0
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.

[pca9632 encoder_led]
i2c_address: 96
#   i2c pca9632 on a ultimaker controller is 10pin with
#   GND -> a0 a1, so address is not 98 by default, but 96
#i2c_mcu:
i2c_bus: twi1
#   Based on which I2C bus connected
#   for I2C0, bus name is twi1
#   for I2C1, bus name is twi0
#i2c_speed:
#   See the "common I2C settings" section for a description of the
#   above parameters.
#scl_pin:
#sda_pin:
#   Alternatively, if the pca9632 is not connected to a hardware I2C
#   bus, then one may specify the "clock" (scl_pin) and "data"
#   (sda_pin) pins. The default is to use hardware I2C.
color_order: RGBW
#   Set the pixel order of the LED (using a string containing the
#   letters R, G, B, W). The default is RGBW.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

[display]
# this is for Ultimaker controller board built-in OLED 12864 screen
lcd_type: ssd1306
i2c_bus: twi1  # see pca9632 i2c bus def
reset_pin: PD2
#e_pin: PA12
#d4_pin: PA14
#d5_pin: PD0
#d6_pin: PD2
#d7_pin: PD6
encoder_pins: ^!PC1, ^!PA7
click_pin: ^!PC3
#kill_pin: ^!EXP2_8

[output_pin beeper]
pin: !PC5
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
# value: 0
#   Silent at power on, set to 1 if active low.
# shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.01
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[gcode_macro g29]
gcode:
    BED_MESH_CALIBRATE
    BED_MESH_OUTPUT

[gcode_macro PROGRAM_START]
gcode:
    M117 Antiblob retract...
    G92 E0 ; Reset Extruder distance to 0
    G1 E-3 ; Retracts filament to prevent blobs during probing
    G92 E0 ; Reset Extruder distance to 0
    M117 Homing...
    G28 ; home all axes
    M117 Generating mesh...
    G29; auto bed leveling
    M117 Heaters Stabilizing...
    G4 S5; wait for heaters to recover
    M117 Purging extruder...
    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    G1 X0.1 Y40 Z0.3 F5000.0  ; move to start-line position
    G1 X0.1 Y100.0 Z0.3 F500.0 E15  ; draw 1st line
    G1 X0.4 Y100.0 Z0.3 F5000.0  ; move to side a little
    G1 X0.4 Y40 Z0.3 F500.0 E30  ; draw 2nd line
    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    M117 Making Magic...

[gcode_macro PROGRAM_END]
gcode:
    G91 ; relative positioning
    G1 Z2 ; lift z up
    G90 ; absolute positioning
    G1 X0 Y200 ; bring nozzle left and bed forward
    M106 S0 ; turn off cooling fan
    M104 S0 ; turn off extruder
    M140 S0 ; turn off bed
    M84 ; disable motors
    M117 PRINT COMPLETE!;
