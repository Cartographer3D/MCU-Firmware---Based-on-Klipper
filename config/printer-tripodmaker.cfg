#  Config file for a tripodmaker (black edition) delta printer: https://reprap.org/wiki/Tripodmaker
# firmware should be compiled for an atmega2560
# the inductive sensor is completely useless if you want to make use of the entire bed, so I stopped using it

[stepper_a]
step_pin: ar17
dir_pin: !ar16
enable_pin: !ar48
step_distance: .01
endstop_pin: ^ar36
homing_speed: 50
#position_endstop: 507
#   Distance (in mm) between the nozzle and the bed when the nozzle is
#   in the center of the build area and the endstop triggers. This
#   parameter must be provided for stepper_a; for stepper_b and
#   stepper_c this parameter defaults to the value specified for
#   stepper_a.
#arm_length: 351
#   Length (in mm) of the diagonal rod that connects this tower to the
#   print head. This parameter must be provided for stepper_a; for
#   stepper_b and stepper_c this parameter defaults to the value
#   specified for stepper_a.
#angle:
#   This option specifies the angle (in degrees) that the tower is
#   at. The default is 210 for stepper_a, 330 for stepper_b, and 90
#   for stepper_c.

# The stepper_b section describes the stepper controlling the front
# right tower (at 330 degrees).
[stepper_b]
step_pin: ar29
dir_pin: !ar28
enable_pin: !ar39
step_distance: 0.01
endstop_pin: ^ar34

# The stepper_c section describes the stepper controlling the rear
# tower (at 90 degrees).
[stepper_c]
step_pin: ar57
dir_pin: !ar56
enable_pin: !ar62
step_distance: 0.01
endstop_pin: ^ar32

[extruder]
step_pin: ar23
dir_pin: !ar22
enable_pin: !ar24
step_distance: 0.006
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: ar2
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog15
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 263
pressure_advance: 0.95

[heater_bed]
heater_pin: ar9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog11
control: watermark
min_temp: 0
max_temp: 101
# heater 1, temp 1


# Print cooling fan = fan pin.
[fan]
pin: ar7

[mcu]
serial: /dev/serial/by-id/usb-RRD__www.ru_RUMBA_-_ATmega_2560_co_75436343430351B0A1E2-if00
pin_map: arduino

[printer]
kinematics: delta
#   This option must be "delta" for linear delta printers.
max_velocity: 250
#   Maximum velocity (in mm/s) of the toolhead relative to the
#   print. This parameter must be specified.
max_accel: 1200
#   Maximum acceleration (in mm/s^2) of the toolhead relative to the
#   print. This parameter must be specified.
max_z_velocity: 250
#   For delta printers this limits the maximum velocity (in mm/s) of
#   moves with z axis movement. This setting can be used to reduce the
#   maximum speed of up/down moves (which require a higher step rate
#   than other moves on a delta printer). The default is to use
#   max_velocity for max_z_velocity.
#minimum_z_position: 0
#   The minimum Z position that the user may command the head to move
#   to.  The default is 0.
#delta_radius: 167
#   Radius (in mm) of the horizontal circle formed by the three linear
#   axis towers. This parameter may also be calculated as:
#    delta_radius = smooth_rod_offset - effector_offset - carriage_offset
#   This parameter must be provided.
# A: smooth_rod_offset = 240, B:smooth_rod_offset = 225, C:smooth_rod_offset = 245
# carriage_offset = 33
# effector_offset = 34
print_radius: 150
#   The radius (in mm) of valid toolhead XY coordinates. One may use
#   this setting to customize the range checking of toolhead moves. If
#   a large value is specified here then it may be possible to command
#   the toolhead into a collision with a tower. The default is to use
#   delta_radius for print_radius (which would normally prevent a
#   tower collision).
minimum_z_position: -10.0

# The delta_calibrate section enables a DELTA_CALIBRATE extended
# g-code command that can calibrate the tower endstop positions and
# angles.
[delta_calibrate]
radius: 125
#   Radius (in mm) of the area that may be probed. This is the radius
#   of nozzle coordinates to be probed; if using an automatic probe
#   with an XY offset then choose a radius small enough so that the
#   probe always fits over the bed. This parameter must be provided.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
[bed_mesh]
speed: 100
horizontal_move_z: 5
mesh_radius: 100
round_probe_count: 3
fade_start: 1.0
fade_end: 0.0
algorithm: bicubic
bicubic_tension: .1


[probe]
pin: !ar33
# from repetier software:
#define Z_PROBE_PIN ORIG_Z_MIN_PIN
#define Z_PROBE_PULLUP 0
#define FEATURE_AUTOLEVEL 1
#define Z_PROBE_X1 -86
#define Z_PROBE_Y1 -50
#define Z_PROBE_X2 86
#define Z_PROBE_Y2 -50
#define Z_PROBE_X3 0
#define Z_PROBE_Y3 100
#   Probe detection pin. This parameter must be provided.
x_offset: 24
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: 24
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#z_offset: 3
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
#speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
#samples: 1
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
#sample_retract_dist: 2.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
#lift_speed: 5.0
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
#samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 0
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.

[output_pin led_PIN]
# remarks:
# light pins = fan 2 pin #define ORIG_FAN2_PIN 8
pin: ar8
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
value: 0
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
shutdown_value: 0
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.
[gcode_macro LEDOFF]
gcode:  SET_PIN PIN=led_PIN VALUE=0

[gcode_macro LEDON]
gcode:  SET_PIN PIN=led_PIN VALUE=1

[gcode_macro unload_filament]
gcode:
    M109 S195
    G91
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G92
    M109 S0

[gcode_macro unload_filament_abs]
gcode:
    M109 S235
    G91
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G1 E-50 F500
    G92
    M109 S0

[gcode_macro load_filament]
gcode:
    M109 S195
    G91
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G92
    M109 S0


[gcode_macro load_filament_abs]
gcode:
    M109 S230
    G91
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G1 E50 F500
    G92
    M109 S0

# Support for gcode arc (G2/G3) commands.
[gcode_arcs]
resolution: 0.3
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.
