# This file contains pin mappings for the Wanhao Duplicator i3 Plus
# (circa 2017).  To use this config, the firmware should be compiled
# for the AVR atmega2560.
# Pin numbers and other parameters were extracted from the
# official Marlin source available at:
# https://github.com/garychen99/Duplicator-i3-plus

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: PF7
dir_pin: !PK0
enable_pin: !PF6
step_distance: .0125
endstop_pin: ^!PF0
position_endstop: 0
position_max: 200
homing_speed: 30.0

[stepper_y]
step_pin: PK2
dir_pin: !PK3
enable_pin: !PK1
step_distance: .0125
endstop_pin: ^!PA2
position_endstop: 0
position_max: 200
homing_speed: 30.0

[stepper_z]
step_pin: PK5
dir_pin: PK7
enable_pin: !PK4
step_distance: .0025
# endstop_pin: ^!PA1
endstop_pin: probe:z_virtual_endstop
# position_endstop: 0.5
position_endstop: 1.14
position_min: -2.0
position_max: 180

[extruder]
step_pin: PF4
dir_pin: PF5
enable_pin: !PF3
step_distance: 0.010417
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF1
#control: pid
#pid_Kp: 30.850721
#pid_Ki: .208175
#pid_Kd: 192.298728
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: PE5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: pid
pid_Kp: 64.095903
pid_Ki: 1.649830
pid_Kd: 622.531455
min_temp: 0
max_temp: 110

[fan]
pin: PE3

[mcu]
serial: /dev/ttyUSB0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 800
max_z_velocity: 5
max_z_accel: 100

# BLTouch probe. One may define this section (instead of a probe
# section) to enable a BLTouch probe. (Note! This bltouch module may
# not work correctly with some BLTouch "clones"!) A virtual
# "probe:z_virtual_endstop" pin is also created (see the "probe"
# section above for the details).
[bltouch]
sensor_pin: PA3
# Pin connected to the BLTouch sensor pin. This parameter must be
# provided.
control_pin: PG1
# Pin connected to the BLTouch control pin. This parameter must be
# provided.
#pin_move_time: 0.675
# The amount of time (in seconds) to wait for the BLTouch pin to
# move up or down. The default is 0.675 seconds.
#pin_up_reports_not_triggered: True
# Set if the BLTouch consistently reports the probe in a "not
# triggered" state after a successful "pin_up" command. This should
# be True for a genuine BLTouch; some BLTouch clones may require
# False. The default is True.
#pin_up_touch_mode_reports_triggered: True
# Set if the BLTouch consistently reports a "triggered" state after
# the commands "pin_up" followed by "touch_mode". This should be
# True for a genuine BLTouch; some BLTouch clones may require
# False. The default is True.
x_offset: -27
y_offset: -46
z_offset: 1.14
#speed:
# See the "probe" section for information on these parameters

# If the BLTouch is used to home the Z axis, then define a
# homing_override section, use probe:z_virtual_endstop as the
# endstop_pin in the stepper_z section, and set the endstop_position
# in the stepper_z section to match the probe's z_offset.
[homing_override]
set_position_z: 5
axes = z
gcode:
    G90   ; Uncomment these 2 lines to blindly lift the Z 2mm at start
    G1 Z15 F600
    G28 X0 Y0
    G1 X100 Y100 F3600
    G28 Z0
    G1 Z25 F600   

# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.  When
# using a probe to home the z-axis, it is recommended to define
# a [homing_override] section in printer.cfg to home toward the
# center of the print area.
#
#  Visual Examples:
#   rectangular bed, probe_count = 3,3:
#               x---x---x (max_point)
#               |
#               x---x---x
#                       |
#   (min_point) x---x---x
#
#   round bed, round_probe_count = 5, bed_radius = r:
#                  x (0,r) end
#                /
#              x---x---x
#                        \
#   (-r,0) x---x---x---x---x (r,0)
#            \
#              x---x---x
#                    /
#                  x  (0,-r) start
#
[bed_mesh]
speed: 50
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
samples: 2
#   The number of times to probe each point.  The probed z-values
#   will be averaged.  The default is to probe 1 time.
samples_result: average
#   One can choose median or average between probes samples
#   The default is average.
sample_retract_dist: 4.0
#   The distance (in mm) to retract between each sample if
#   sampling more than once.  Default is 2mm.
#bed_radius:
#   Defines the radius to probe for round beds.  Note that the radius
#   is relative to the nozzle's origin, if using a probe be sure to
#   account for its offset.  This parameter must be provided for round
#   beds and omitted for rectangular beds.
min_point: 50,50
#   Defines the minimum x,y position to probe when for rectangular
#   beds. Note that this refers to the nozzle position, take care that
#   you do not define a point that will move the probe off of the bed.
#   This parameter must be provided for rectangular beds.
max_point: 200,190
#   Defines the maximum x,y position to probe when for rectangular
#   beds. Follow the same precautions as listed in min_point. Also note
#   that this does not necessarily define the last point probed, only
#   the maximum coordinate. This parameter must be provided.
probe_count: 3,3
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each axis.
#   A single value is also valid, in which case that value will be applied
#   to both axes.  Default is 3,3.
#round_probe_count: 5
#   For round beds, this is integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled.  Default is 1.0.
fade_end: 10.0
#   The gcode z position in which phasing out completes.  When set
#   to a value below fade_start, fade is disabled. It should be
#   noted that fade may add unwanted scaling along the z-axis of a
#   print.  If a user wishes to enable fade, a value of 10.0 is
#   recommended. Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
#relative_reference_index:
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.

[gcode_macro G29]
gcode:
        G28
        BED_MESH_CALIBRATE
        G1 X0 Y0 Z0.4 F4000


[gcode_macro LOAD_FILAMENT]
gcode:
	M83
	M109 S200.000
	G92 E0.0
	G1 E50 F400
	G1 E50 F200
	G92 E0.0
	M104 S0
	M400


[gcode_macro UNLOAD_FILAMENT]
gcode:
	M83
	G92 E0.0
	M109 S200.000
	G92 E0 
	G1 E30 F100
	G92 E0
	G1 E-50 F2000
	G1 E-50 F2000
	G1 E-50 F2000
	G1 E-50 F2000
	G92 E0.0
	M104 S0
	M400

[gcode_macro END]
gcode:
        M400
        M104 S0 ; turn off extruder
        M140 S0 ; turn off bed
        M106 S0 ; turn off cooling fan
        G91
        G1 F1800 E-3
        G90 {% if status.gcode.move_zpos < 50 %}
        G0 Z50 {% elif status.gcode.move_zpos < 150 %}
        G91
        G0 Z10
        G90 {% endif %}
        G0 X0 Y150 ; bring plate forward
        M84 ; disable motors


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# points =
#*# 	  -0.638750, 0.133750, 0.891250
#*# 	  -0.546250, 0.377500, 1.326250
#*# 	  -0.397500, 0.655000, 1.751250
#*# x_count = 3
#*# y_count = 3
#*# min_x = 50.0
#*# max_x = 200.0
#*# min_y = 50.0
#*# max_y = 190.0
#*# x_offset = -27.0
#*# y_offset = -46.0
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.670
#*# pid_ki = 1.291
#*# pid_kd = 159.117
