# This file contains common configurations and pin mappings
# for the Flsun QQ-S using the MKS Robin Mini board.
#
# To use this config, the firmware should be compiled for the
# STM32F103. When running "make menuconfig", enable "extra low-level
# configuration setup", select the 28KiB bootloader, and serial (on
# USART3 PB11/PB10) communication.

# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
# ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano.bin
# Copy the file out/Robin_nano.bin to an SD card and then restart the
# printer with that SD card.

# Mesh bed leveling is also added, but commented out. Only enable it if
# running the PROBE_ACCURACY command outputs a range value < 0.025 mm

# There is a BL Touch as well as a Filament Sensor section commented out
# at the end of this config, which doesn't come stock with the QQ-S.

# Note that an offset probe is not recommended on delta printers due to
# effector tilt. In order to use it successfully to create a useable bed mesh
# you need to run the enhanced delta calibration:
# https://www.klipper3d.org/Delta_Calibrate.html

# For instructions on how to install either of these components,
# follow this guide: https://github.com/CobraPi/Klipper-Firmware-FLSUN-QQ-S-Pro

# See docs/Config_Reference.md for a description of parameters.

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
baud: 250000

[printer]
kinematics: delta
max_velocity: 500
max_accel: 2000
max_z_velocity: 200
minimum_z_position: -5
delta_radius: 130

[stepper_a]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
rotation_distance: 32
endstop_pin: PA15
microsteps: 16
homing_speed: 60
position_endstop: 370
arm_length: 280.0

[stepper_b]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
rotation_distance: 32
endstop_pin: PA12
microsteps: 16

[stepper_c]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
rotation_distance: 32
endstop_pin: PC4
microsteps: 16

[probe]
pin: !PA11
x_offset: 0
y_offset: 0
z_offset: 10
samples: 3
samples_result: average
sample_retract_dist: 5

[delta_calibrate]
radius: 120
horizontal_move_z: 10

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
rotation_distance: 9
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
control: pid
pid_Kp: 14.529
pid_Ki: 0.557
pid_Kd: 94.802
min_extrude_temp: 180
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 150

[fan]
pin: PB1
kick_start_time: 0.200

#######################################################################
# Optional: Bed mesh leveling - only use if the PROBE_ACCURACY
#                               command outputs a range value < 0.025 mm
#######################################################################

#[bed_mesh]
#speed: 50
#horizontal_move_z: 5
#mesh_radius: 100
#mesh_origin: 0,0
#round_probe_count: 5
#algorithm: lagrange

#######################################################################
# Optional: End-stop style filament sensor
#######################################################################

#[filament_switch_sensor Filament]
#pause_on_runout: True
#switch_pin: PA4

#######################################################################
# Optional: BL Touch Probe - comment out [probe] section if using this
#######################################################################

#[bltouch]
#sensor_pin: PA11
#control_pin: PA8
#stow_on_each_sample: True
#set_output_mode: 5V
#x_offset: 3
#y_offset: -36
#z_offset: -2.3
#samples: 3
#sample_retract_dist: 5
#samples_result: average

# This is the path where your g-code files will be uploaded to in the
# rasbperry pi when running either Mainsail or fluidd
#[virtual_sdcard]
#path: ~/gcode_files

[display_status]

[pause_resume]

# This macro should be called at the 'start g-code' part
# of your slicer and you would put all the start g-code here
# instead so that you don't have to re-slice everytime you
# have to edit the commands
[gcode_macro START_PRINT]
gcode:
    #SET_GCODE_OFFSET Z_ADJUST=-0.1 MOVE=1 # sets z-offset if adjusted mid print

# This macro should be called at the 'end g-code' part
# of your slicer and like the macro above, you would
# also put all of your end g-code here for the same reason as above

[gcode_macro END_PRINT]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0 # resets the z-offset after every print

# Pause print macro
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 220    #edit to your park position
default_parameter_Y: 220    #edit to your park position
default_parameter_Z: 10     #edit to your park position
default_parameter_E: 1      #edit to your retract length
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

# Resume print macro
[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1      #edit to your retract length
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

# Cancel print macro
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
