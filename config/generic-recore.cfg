# This file serves as documentation for config parameters. One may
# copy and edit this file to configure a new cartesian style
# printer. For delta style printers, see the "example-delta.cfg"
# file. For corexy/h-bot style printers, see the "example-corexy.cfg"
# file. Only common config sections are described here - see the
# "example-extras.cfg" file for configuring less common devices.

# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.

# A note on pin names: pins may be configured with a hardware name
# (such as "PA4") or with an Arduino alias name (such as "ar29" or
# "analog3"). In order to use Arduino names, the pin_map variable in
# the mcu section must be present and have a value of "arduino". Pin
# names may be preceded by an '!' to indicate that a reverse polarity
# should be used (eg, trigger on low instead of high). Input pins may
# be preceded by a '^' to indicate that a hardware pull-up resistor
# should be enabled for the pin. If the micro-controller supports
# pull-down resistors then an input pin may alternatively be preceded
# by a '~'.


#[tmc2209 stepper_x]
#uart_pin: ar100:33
#uart_address: 0
#uart_tty: 2
#microsteps: 16
#run_current: 0.100
#hold_current: 0.100
#stealthchop_threshold: 250

#[tmc2209 stepper_y]
#uart_pin: ar100:33
#uart_address: 1
#uart_tty: 2
#microsteps: 16
#run_current: 0.100
#hold_current: 0.100
#stealthchop_threshold: 250

#[tmc2209 stepper_z]
#uart_pin: ar100:33
#uart_address: 3
#uart_tty: 2
#microsteps: 16
#run_current: 0.100
#hold_current: 0.100
#stealthchop_threshold: 250

#[tmc2209 stepper_z1]
#uart_pin: ar100:33
#uart_address: 2
#uart_tty: 2
#microsteps: 16
#run_current: 0.100
#hold_current: 0.100
#stealthchop_threshold: 250

#[tmc2209 stepper_z2]
#uart_pin: ar100:34
#uart_address: 1
#uart_tty: 3
#microsteps: 16
#run_current: 0.100
#hold_current: 0.100
#stealthchop_threshold: 250

#[tmc2209 stepper_z3]
#uart_pin: ar100:34
#uart_address: 0
#uart_tty: 3
#microsteps: 16
#run_current: 0.100
#hold_current: 0.100
#stealthchop_threshold: 250


# Micro-controller information.
[mcu]
serial: /dev/ttyS4
baud: 38400
restart_method: pin

[static_digital_output my_output_pins]
pins: PA13, PB2, PB5, PB6, !ar100:PG1, ar100:PG11

[mcu ar100]
pin_map: ar100
serial: /dev/ttyS1
baud: 1500000
restart_method: script

[recore]
revision: A1
host_mcu: mcu
enable_pin: !ar100:PG2

# The stepper_x section is used to describe the stepper controlling
# the X axis in a cartesian robot.
[stepper_x]
step_pin: ar100:PL4
dir_pin: ar100:PE8
endstop_pin: !ar100:PH9
step_distance: .0225
position_endstop: 0
position_max: 200
homing_speed: 2.0

# The stepper_y section is used to describe the stepper controlling
# the Y axis in a cartesian robot. It has the same settings as the
# stepper_x section.
[stepper_y]
step_pin: ar100:PL5
dir_pin: ar100:PE9
endstop_pin: !ar100:PH8
step_distance: .0225
position_endstop: 0
position_max: 200
homing_speed: 2.0

# The stepper_z section is used to describe the stepper controlling
# the Z axis in a cartesian robot. It has the same settings as the
# stepper_x section.
[stepper_z]
step_pin: ar100:PL6
dir_pin: ar100:PE10
endstop_pin: !ar100:PH7
step_distance: .0225
position_endstop: 0
position_max: 200
homing_speed: 2.0


# The extruder section is used to describe both the stepper
# controlling the printer extruder and the heater parameters for the
# nozzle. The stepper configuration has the same settings as the
# stepper_x section and the heater configuration has the same settings
# as the heater_bed section (described below).
[extruder]
step_pin: ar100:PL7
dir_pin: ar100:PE11
heater_pin: PA8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
step_distance: .0225
nozzle_diameter: 0.400
filament_diameter: 1.75
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_extrude_temp: 30
min_temp: 0
max_temp: 300

# The heater_bed section describes a heated bed (if present - omit
# section if not present).
[heater_bed]
heater_pin: PA11
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA3
control: watermark
min_temp: 0
max_temp: 300

#[extruder1]
#step_pin: ar100:PL8
#dir_pin: ar100:PE12
#step_distance: .004242
#nozzle_diameter: 0.500
#filament_diameter: 1.75
#heater_pin: PA9
#sensor_pin: PA1
#sensor_type: EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 210

#[extruder2]
#step_pin: ar100:PL9
#dir_pin: ar100:PE13
#step_distance: .004242
#nozzle_diameter: 0.500
#filament_diameter: 1.75
#heater_pin: PA10
#sensor_pin: PA2
#sensor_type: EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 210


# Print cooling fan (omit section if fan not present).
[fan]
pin: PB0

[output_pin fan1]
pin: PB1

[output_pin fan2]
pin: PB3

[output_pin fan3]
pin: PB4

[temperature_sensor board]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA6
gcode_id: Board

[adc_temperature v]
temperature1: 0
voltage1: 0
temperature2: 24
voltage2: 3.3

[temperature_sensor voltage]
sensor_pin: PA4
sensor_type: v
gcode_id: Voltage

[adc_temperature current]
temperature1: 0
voltage1: 0
temperature2: 24
voltage2: 3.3

[temperature_sensor current]
sensor_pin: PA5
sensor_type: current
gcode_id: Current

# The printer section controls high level printer settings.
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 25
max_z_accel: 30
